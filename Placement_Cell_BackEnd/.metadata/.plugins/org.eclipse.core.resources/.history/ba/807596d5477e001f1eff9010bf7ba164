package com.controller;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.dao.CandidateProfile;
import com.service.CandidateProfileService;

@RestController
@RequestMapping("/candidateprofiles")
public class CandidateProfileController {

    @Autowired
    private CandidateProfileService candidateProfileService;

    // Get all candidate profiles
    @GetMapping("/all")
    public ResponseEntity<Iterable<CandidateProfile>> getAllCandidateProfiles() {
        return new ResponseEntity<>(candidateProfileService.getAllCandidateProfiles(), HttpStatus.OK);
    }

    // Get candidate profile by ID
    @GetMapping("/{id}")
    public ResponseEntity<CandidateProfile> getCandidateProfileById(@PathVariable Long id) {
        Optional<CandidateProfile> candidateProfile = candidateProfileService.getCandidateProfileById(id);
        return candidateProfile.map(value -> new ResponseEntity<>(value, HttpStatus.OK))
                .orElseGet(() -> new ResponseEntity<>(HttpStatus.NOT_FOUND));
    }

    // Create or update a candidate profile
    @PostMapping("/save")
    public ResponseEntity<CandidateProfile> createOrUpdateCandidateProfile(@RequestBody CandidateProfile candidateProfile) {
        return new ResponseEntity<>(candidateProfileService.saveCandidateProfile(candidateProfile), HttpStatus.CREATED);
    }

    // Delete a candidate profile
    @DeleteMapping("/{id}")
    public ResponseEntity<Void> deleteCandidateProfile(@PathVariable Long id) {
        candidateProfileService.deleteCandidateProfile(id);
        return new ResponseEntity<>(HttpStatus.NO_CONTENT);
    }
}