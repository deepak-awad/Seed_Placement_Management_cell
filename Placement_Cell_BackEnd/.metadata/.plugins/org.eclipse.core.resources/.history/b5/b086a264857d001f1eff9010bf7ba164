package com.controller;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import com.dao.PlacementExecutive;
import com.service.PlacementExecutiveService;

@RestController
@RequestMapping("/placement-executives")
@CrossOrigin(origins = "*") // Adjust as needed
public class PlacementExecutiveController {

    @Autowired
    private PlacementExecutiveService placementExecutiveService;

    // Candidate Forget Password
    @GetMapping("/username/{username}")
    public ResponseEntity<PlacementExecutive> getExecutiveByUsername(@PathVariable String username) {
        Optional<PlacementExecutive> executive = placementExecutiveService.getExecutiveByUsername(username);
        return executive.map(value -> new ResponseEntity<>(value, HttpStatus.OK))
                .orElseGet(() -> new ResponseEntity<>(HttpStatus.NOT_FOUND));
    }
    
    // Executive Login
    @GetMapping("/executive-login/{username}/{password}")
    public ResponseEntity<PlacementExecutive> checkExecutiveByUsernameAndPassword(
            @PathVariable String username, @PathVariable String password) {
        
        Optional<PlacementExecutive> executive = placementExecutiveService.getExecutiveByUsername(username);
        
        if (executive.isPresent()) {
            PlacementExecutive exec = executive.get();
            if (placementExecutiveService.checkPassword(password, exec.getPassword())) {
                return new ResponseEntity<>(exec, HttpStatus.OK);
            } else {
                return new ResponseEntity<>(HttpStatus.UNAUTHORIZED); // Incorrect password
            }
        } else {
            return new ResponseEntity<>(HttpStatus.NOT_FOUND); // Executive not found
        }
    }
}
