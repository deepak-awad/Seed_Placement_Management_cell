package com.service;

import java.util.Date;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;
import java.util.stream.StreamSupport;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.dao.PlacementExecutive;
import com.repository.PlacementExecutiveRepository;

@Service
public class PlacementExecutiveService {

    @Autowired
    private PlacementExecutiveRepository placementExecutiveRepository;
    
    public Optional<PlacementExecutive> getExecutiveByUsername(String username) {
        return placementExecutiveRepository.findByUsername(username);
    }

    public List<PlacementExecutive> getAllExecutives() {
        return StreamSupport.stream(placementExecutiveRepository.findAll().spliterator(), false)
                           .collect(Collectors.toList());
    }

    public Optional<PlacementExecutive> getExecutiveById(Long authId) {
        return placementExecutiveRepository.findById(authId);
    }

    public PlacementExecutive createOrUpdateExecutive(PlacementExecutive executive) {
        if (executive.getAuthId() == null) {
            executive.setCreatedDate(new Date());
        }
        executive.setUpdatedDate(new Date());
        return placementExecutiveRepository.save(executive);
    }

    public void deleteExecutive(Long authId) {
        placementExecutiveRepository.deleteById(authId);
    }
}